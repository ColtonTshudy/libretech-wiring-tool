#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2021 Da Xue <da@libre.computer>
# PURPOSE: Manage the application and removal of device tree overlays in the Linux kernel.

if [ "$USER" != "root" ]; then
	echo "Please run this as root." >&2
	exit 1
fi

if [ -z "$VENDOR" ]; then
	if [ ! -e /sys/class/dmi/id/board_vendor ]; then
		echo "No vendor found!" >&2
		exit 1
	fi
	VENDOR=$(tr -d '\0' < /sys/class/dmi/id/board_vendor)
fi


if [ -z "$BOARD" ]; then
	if [ ! -e /sys/class/dmi/id/board_name ]; then
		echo "No board name found!" >&2
		exit 1
	fi
	BOARD=$(tr -d '\0' < /sys/class/dmi/id/board_name)
fi

PATH_OF_CONFIG=/sys/kernel/config/device-tree/overlays

if [ ! -d "$PATH_OF_CONFIG" ]; then
	echo "The running kernel does not supported by this tool." >&2
	exit 1
fi

cd $(dirname $(readlink -f "${BASH_SOURCE[0]}"))

PATH_DTBO=$VENDOR/$BOARD/dt

LDTO_list()
{
	local dtbos=$PATH_DTBO/*.dtbo
	if [ -z "$(ls $dtbos 2> /dev/null)" ]; then
		echo "No overlays detected. Did you run make?" >&2
		return 1
	fi
	echo "#Available Overlays:" >&2
	for i in $dtbos
	do
		basename $i .dtbo
	done
	LDTO_active
}

LDTO_enable()
{
	if [ -z "$1" ]; then
		LDTO_list
		return 1
	fi
	DTBO="$PATH_DTBO/$1.dtbo"
	if [ ! -f $DTBO ]; then
		echo "$FUNCNAME: $1 does not exist and cannot be added" >&2
		return 1
	fi
	if [ -e $PATH_OF_CONFIG/$1 ]; then
		echo "Overlay $1: already exists" >&2
		return 1
	fi
	mkdir $PATH_OF_CONFIG/$1
	cat $PATH_DTBO/$1.dtbo > $PATH_OF_CONFIG/$1/dtbo
	echo "Overlay $1: `cat $PATH_OF_CONFIG/$1/status`" >&2
}

LDTO_disable()
{
	if [ -z "$1" ]; then
		LDTO_active
		return 1
	fi
	if [ ! -e "$PATH_OF_CONFIG/$1" ]; then
		echo "Overlay $1: does not exist and cannot be removed" >&2
		return 1
	fi
	rmdir $PATH_OF_CONFIG/$1
	echo "Overlay $1: removed" >&2
}

LDTO_active()
{
	if [ -z "$1" ]; then
		echo "#Active Overlays:" >&2
		for i in `ls $PATH_OF_CONFIG`;
		do
			basename $i
		done
	else
		if [ -z "$1" ]; then
			return 1
		fi
		for i in `ls $PATH_OF_CONFIG`;
		do
			if [ "$1" = $(basename $i) ]; then
				return 0
			fi
		done
		return 1
	fi
}

LDTO_showHelp(){
	echo "$0 list"
	echo "$0 active [DTBO]"
	echo "$0 enable [DTBO]"
	echo "$0 disable [DTBO]"
}

cmd=showHelp
if [ ! -z "$1" ]; then
	cmd=$1
	shift
fi
LDTO_$cmd $@