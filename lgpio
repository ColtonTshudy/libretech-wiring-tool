#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2021 Da Xue <da@libre.computer>

# PURPOSE: GPIO mapping and testing

#set -x
set -e

if [ -z "$VENDOR" ]; then
	if [ ! -e /sys/class/dmi/id/board_vendor ]; then
		echo "No vendor found!" >&2
		exit 1
	fi
	VENDOR=$(tr -d '\0' < /sys/class/dmi/id/board_vendor)
fi


if [ -z "$BOARD" ]; then
	if [ ! -e /sys/class/dmi/id/board_name ]; then
		echo "No boardname found!" >&2
		exit 1
	fi
	BOARD=$(tr -d '\0' < /sys/class/dmi/id/board_name)
fi

cd $(dirname $(readlink -f "${BASH_SOURCE[0]}"))

if [ ! -f "$VENDOR/$BOARD/gpio.map" ]; then
	echo "GPIO map not available for this board." >&2
	exit 1
fi

MAP_FILE="$VENDOR/$BOARD/gpio.map"
TAB_CHAR='	'

LGPIO_getColumn(){
	local cols=$(grep -i "#header" "$MAP_FILE" | grep -io "^.*$1$TAB_CHAR")
	if [ -z "$cols" ]; then
		echo "$FUNCNAME: invalid column name: $1" >&2
		exit 1
	fi
	local col=$(echo "${cols//[^	]}" | wc -c)
	echo $((col - 1))
}

LGPIO_headers(){
	grep -v '^#' "$MAP_FILE" | cut -f 1 -d "$TAB_CHAR" | uniq
}

LGPIO_header(){
	if [ ! -z "$1" ]; then
		echo "#Pin	Chip	Line" >&2
		grep "${1^^}" "$MAP_FILE" | cut -f 2,3,4 -d "$TAB_CHAR"
	fi
}

LGPIO_info(){
	if [ $# -lt 1 ]; then
		echo "$0 info [header] pin [type=all,chip,line,sysfs,name,pad,ref,desc]" >&2
		exit 1
	fi
	
	local header
	if [ "$1" -eq "$1" ] 2> /dev/null; then
		header=$(grep -v '^#' "$MAP_FILE" | head -n 1 | cut -f 1 -d "$TAB_CHAR")
	else
		header="$1"
		shift
	fi
	if ! grep -i "^$header$TAB_CHAR" "$MAP_FILE" > /dev/null; then
		echo "FUNCNAME: header does not exist." >&2
		exit 1
	fi
	
	local pin
	if [ "$1" -ne "$1" ] 2> /dev/null; then
		echo "$FUNCNAME: pin must be a number" >&2
		exit 1
	fi
	pin="$1"
	shift
	if ! grep -i "^$header$TAB_CHAR$pin$TAB_CHAR" "$MAP_FILE"> /dev/null; then
		echo "FUNCNAME: pin does not exist." >&2
		exit 1
	fi
	
	if [ -z "$1" -o "${1,,}" = "all" ]; then
		grep -i "#header" "$MAP_FILE" | cut -f 3- -d "$TAB_CHAR"
		grep -i "^$header$TAB_CHAR$pin$TAB_CHAR" "$MAP_FILE" | cut -f 3- -d "$TAB_CHAR"
	elif [ "$1" = "${1/,}" ]; then
		grep -i "^$header$TAB_CHAR$pin$TAB_CHAR" "$MAP_FILE" | cut -f $(LGPIO_getColumn "$1") -d "$TAB_CHAR"
	else
		local colnames
		for col in $@; do
			colnames="$colnames ${col//,/ }"
		done
		local cols=""
		for colname in $colnames; do
			cols="$cols,$(LGPIO_getColumn "$colname")"
		done
		grep -i "#header" "$MAP_FILE" | cut -f "${cols:1}" -d "$TAB_CHAR"
		grep -i "^$header$TAB_CHAR$pin$TAB_CHAR" "$MAP_FILE" | cut -f "${cols:1}" -d "$TAB_CHAR"
	fi
}
LGPIO_bcm(){
	if [ $# -lt 1 ]; then
		echo "$0 bcm pin [type=all,chip,line,sysfs,name,pad,ref,desc]" >&2
		exit 1
	fi
	declare -A BCM_GPIO2PIN
	BCM_GPIO2PIN[2]=3
	BCM_GPIO2PIN[3]=5
	BCM_GPIO2PIN[4]=7
	BCM_GPIO2PIN[14]=8
	BCM_GPIO2PIN[15]=10
	BCM_GPIO2PIN[17]=11
	BCM_GPIO2PIN[18]=12
	BCM_GPIO2PIN[27]=13
	BCM_GPIO2PIN[22]=15
	BCM_GPIO2PIN[23]=16
	BCM_GPIO2PIN[24]=18
	BCM_GPIO2PIN[10]=19
	BCM_GPIO2PIN[9]=21
	BCM_GPIO2PIN[25]=22
	BCM_GPIO2PIN[11]=23
	BCM_GPIO2PIN[8]=24
	BCM_GPIO2PIN[7]=26
	BCM_GPIO2PIN[SDA0]=27
	BCM_GPIO2PIN[SCL0]=28
	BCM_GPIO2PIN[ID_SD]=27
	BCM_GPIO2PIN[ID_SC]=28
	BCM_GPIO2PIN[5]=29
	BCM_GPIO2PIN[6]=31
	BCM_GPIO2PIN[12]=32
	BCM_GPIO2PIN[13]=33
	BCM_GPIO2PIN[19]=35
	BCM_GPIO2PIN[16]=36
	BCM_GPIO2PIN[26]=37
	BCM_GPIO2PIN[20]=38
	BCM_GPIO2PIN[21]=40
	local bcm_gpio=$1
	shift
	if [[ ! -v BCM_GPIO2PIN[$bcm_gpio] ]]; then
		echo "$FUNCNAME: bcm gpio does not exist." >&2
		exit 1
	fi
	LGPIO_info ${BCM_GPIO2PIN[$bcm_gpio]} $@
}

LGPIO_help(){
	echo "$0 headers" >&2
	echo "$0 header [HEADER]" >&2
	echo "$0 info [HEADER] PIN [TYPE]" >&2
	echo "$0 bcm [PIN] [TYPE]" >&2
	exit 1
}

cmd=help
if [ ! -z "$1" ]; then
	cmd=$1
	shift
fi
LGPIO_$cmd $@