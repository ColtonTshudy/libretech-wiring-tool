#!/bin/sh

# Copyright (C) 2021 Da Xue <da@libre.computer>
# All rights reserved. 
# PURPOSE: Manage the application and removal of device tree overlays in the Linux kernel.

if [ "$USER" != "root" ]; then
	echo "Please run this as root or with sudo privileges."
	exit 1
fi
if [ ! -e /sys/class/dmi/id/board_vendor ]; then
        echo "No vendor found!"
        exit 1
fi
VENDOR=$(tr -d '\0' < /sys/class/dmi/id/board_vendor)
if [ ! -e /sys/class/dmi/id/board_name ]; then
        echo "No boardname found!"
        exit 1
fi
BOARD=$(tr -d '\0' < /sys/class/dmi/id/board_name)

OVERLAYS=/sys/kernel/config/device-tree/overlays
FIRMWARE=/opt/$VENDOR/$BOARD/dtbo

function enableOverlay()
{
	if [ -z "$1" ]; then
		listOverlays
		return 1
	fi
	DTBO="$FIRMWARE/$1.dtbo"
        if [ ! -f $DTBO ]; then
                echo "Overlay $1: does not exist and cannot be added"
                return 1
        fi
        if [ -e $OVERLAYS/$1 ]; then
                echo "Overlay $1: already exists"
                return 1
        fi
        mkdir $OVERLAYS/$1
        cat $FIRMWARE/$1.dtbo > $OVERLAYS/$1/dtbo
        echo "Overlay $1: `cat $OVERLAYS/$1/status`"
}

function disableOverlay()
{
        if [ -z "$1" ]; then
		listActiveOverlays
		return 1
        fi
        if [ ! -e "$OVERLAYS/$1" ]; then
                echo "Overlay $1: does not exist and cannot be removed"
                return 1
        fi
        rmdir $OVERLAYS/$1
        echo "Overlay $1: removed"
}

function listActiveOverlays()
{
	echo "Active Overlays:"
	for i in `ls $OVERLAYS`;
	do
		basename $i
	done
}
function listOverlays()
{
	listActiveOverlays

        echo "Available Overlays:"
        for i in $FIRMWARE/*.dtbo
        do
                basename $i .dtbo
        done
}

function showHelp()
{
	echo "$0 list"
	echo "$0 enable [OVERLAY]"
	echo "$0 disable [OVERLAY]"
}

cmd=showHelp
case "$1" in
        enable)
                cmd=enableOverlay
        ;;

        disable)
                cmd=disableOverlay
        ;;
	list)
		cmd=listOverlays
	;;
esac
shift
$cmd $@

